package  {		import flash.display.MovieClip;	import com.greensock.TweenLite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.display.DisplayObject;	import flash.text.StyleSheet;	import flash.text.TextField;		public class alert extends MovieClip {		public static const TIP:Number = 0;		public static const CONFIRM:Number = 1;		public static const CONFIRM_CANCEL:Number = 2;		private var tweenTime = 0.3;		private var initX,initY,targetY:Number;		private var clock:Timer = new Timer(1000);		private var alertObj:Object;		private var sheet:StyleSheet = new StyleSheet();		public function alert() {			// constructor code			addEventListener(Event.ADDED_TO_STAGE, init);		}				public function set evTarget(t:DisplayObject){			t.addEventListener(AlertEvent.ALERT, newAlert);		}						private function init(e:Event):void{			setStyles();			this.x = initX = 0;			this.y = initY = stage.stageHeight;			this.alpha = 0;			targetY = stage.stageHeight - this.height;			cancel.mouseChildren = ok.mouseChildren = false;			this.textBox.mouseEnabled = this.textBox.mouseChildren = false;			addEventListener(MouseEvent.MOUSE_UP, mouseHandler);					}				private function setStyles():void		{						//field.autoSize = TextFieldAutoSize.LEFT;			//field.antiAliasType = AntiAliasType.ADVANCED;			this.textBox.message.multiline = true;			this.textBox.message.wordWrap = true;			this.textBox.message.embedFonts = true;			this.textBox.message.condenseWhite = true;						var largeHeaderFont:bert = new bert();			var headerFont:lib_bold = new lib_bold();			var bodyFont:lib_ital = new lib_ital();			var boldFont:lib_bold = new lib_bold();						var largeHeader:Object = {display:"block", fontFamily:largeHeaderFont.fontName, fontSize:26, fontWeight: "bold", letterSpacing: -1, textIndent:0};			var bodyBreak:Object = {display:"block", fontSize:2};			var header:Object = {display:"block", fontFamily:headerFont.fontName, fontSize:20, fontWeight: "bold", letterSpacing: -1, textIndent:0};			var body:Object = {display:"block", fontFamily:bodyFont.fontName, fontStyle:"italic", fontSize :20, textIndent:0};			var bold:Object = {fontFamily:boldFont.fontName, fontWeight: "bold", fontStyle:"bold", fontSize:18};						/*sheet.setStyle(".space", paperSpacer);			sheet.setStyle(".header", paperHeader);			sheet.setStyle(".body", paperBody);			sheet.setStyle(".bold", bold);*/			sheet.setStyle("br", bodyBreak);			sheet.setStyle("h1", largeHeader);			sheet.setStyle("h2", header);			sheet.setStyle("p", body);			sheet.setStyle(".bold", bold);									this.textBox.message.styleSheet = sheet;						//textField.textFlow.formatResolver = new CSSFormatResolver(sheet);//			field.textFlow.flowComposer.updateAllControllers();		}										public function newAlert(a:AlertEvent):void{			var _alert:Object = a.alert;			this.textBox.message.htmlText = _alert.text;			alertObj = _alert;			if (clock.running) clock.stop();			switch(alertObj.type){				case TIP:					this.ok.visible = this.cancel.visible = false;					this.ok.mouseEnabled = this.cancel.mouseEnabled = false;					break;				case CONFIRM:					this.ok.visible = this.ok.mouseEnabled = true;					this.cancel.visible = this.cancel.mouseEnabled = false;					timeout = -1;					break;				case CONFIRM_CANCEL:					this.ok.visible = this.cancel.visible = true;					this.ok.mouseEnabled = this.cancel.mouseEnabled = true;					timeout = -1;					break;			}			var timeout:Number = alertObj.time;			if (timeout > 0){				clock = new Timer(timeout*1000, 1);				clock.addEventListener(TimerEvent.TIMER_COMPLETE, timerCompleteHandler);				clock.start();			}						TweenLite.to(this, tweenTime, {y:targetY, alpha:1});					}				private function timerCompleteHandler(t:TimerEvent):void{			clock.removeEventListener(TimerEvent.TIMER_COMPLETE,timerCompleteHandler);			TweenLite.to(this, tweenTime, {y:initY, alpha:0, onComplete:alertOff});		}				private function mouseHandler(m:MouseEvent){			if(m.target is MovieClip){				alertObj.confirmed = m.target is ok_mc;								TweenLite.to(this, tweenTime, {y:initY, alpha:0, onComplete:alertOff});			}		}				private function alertOff():void{			dispatchEvent(new AlertEvent(AlertEvent.ACTION, false,false,alertObj));			stage.mouseChildren = true;		}	}	}